const __vite__fileDeps=["assets/sign-BY7mnq7o.js","assets/index-BkwLtTZs.js","assets/index-C45Ffc9u.css","assets/sign-typed-data-DgMu-OeZ.js","assets/sign-transaction-T3LxZ0Oi.js","assets/send-transaction-Cb5Z-VQb.js","assets/switch-chain-DGGvJU-p.js"],__vite__mapDeps=i=>i.map(i=>__vite__fileDeps[i]);
import{eF as d,c9 as n}from"./index-BkwLtTZs.js";function T(o,r){if(d(o.address)!==d(r))throw new Error(`Failed to validate account address (${o.address}), differs from ${r}`)}function m(o){const r=o.split(":"),p=Number.parseInt(r[1]??"0");if(r.length!==2||r[0]!=="eip155"||p===0||!p)throw new Error(`Invalid chainId ${o}, should have the format 'eip155:1'`);return p}async function u(o){const{wallet:r,walletConnectClient:p,thirdwebClient:w,event:{topic:h,id:l,params:{chainId:c,request:t}},handlers:a}=o,i=r.getAccount();if(!i)throw new Error("No account connected to provided wallet");let s;try{switch(t.method){case"personal_sign":{if(a!=null&&a.personal_sign)s=await a.personal_sign({account:i,params:t.params});else{const{handleSignRequest:e}=await n(()=>import("./sign-BY7mnq7o.js"),__vite__mapDeps([0,1,2]));s=await e({account:i,params:t.params})}break}case"eth_sign":{if(a!=null&&a.eth_sign)s=await a.eth_sign({account:i,params:t.params});else{const{handleSignRequest:e}=await n(()=>import("./sign-BY7mnq7o.js"),__vite__mapDeps([0,1,2]));s=await e({account:i,params:t.params})}break}case"eth_signTypedData":{if(a!=null&&a.eth_signTypedData)s=await a.eth_signTypedData({account:i,params:t.params});else{const{handleSignTypedDataRequest:e}=await n(()=>import("./sign-typed-data-DgMu-OeZ.js"),__vite__mapDeps([3,1,2]));s=await e({account:i,params:t.params})}break}case"eth_signTypedData_v4":{if(a!=null&&a.eth_signTypedData_v4)s=await a.eth_signTypedData_v4({account:i,params:t.params});else{const{handleSignTypedDataRequest:e}=await n(()=>import("./sign-typed-data-DgMu-OeZ.js"),__vite__mapDeps([3,1,2]));s=await e({account:i,params:t.params})}break}case"eth_signTransaction":{if(a!=null&&a.eth_signTransaction)s=await a.eth_signTransaction({account:i,params:t.params});else{const{handleSignTransactionRequest:e}=await n(()=>import("./sign-transaction-T3LxZ0Oi.js"),__vite__mapDeps([4,1,2]));s=await e({account:i,params:t.params})}break}case"eth_sendTransaction":{const e=m(c);if(a!=null&&a.eth_sendTransaction)s=await a.eth_sendTransaction({account:i,chainId:e,params:t.params});else{const{handleSendTransactionRequest:_}=await n(()=>import("./send-transaction-Cb5Z-VQb.js"),__vite__mapDeps([5,1,2]));s=await _({account:i,chainId:e,thirdwebClient:w,params:t.params})}break}case"eth_sendRawTransaction":{const e=m(c);if(a!=null&&a.eth_sendRawTransaction)s=await a.eth_sendRawTransaction({account:i,chainId:e,params:t.params});else{const{handleSendRawTransactionRequest:_}=await n(()=>import("./send-raw-transaction-CcFfZG5y.js"),[]);s=await _({account:i,chainId:e,params:t.params})}break}case"wallet_addEthereumChain":{if(a!=null&&a.wallet_addEthereumChain)s=await a.wallet_addEthereumChain({wallet:r,params:t.params});else throw new Error("Unsupported request method: wallet_addEthereumChain");break}case"wallet_switchEthereumChain":{if(a!=null&&a.wallet_switchEthereumChain)s=await a.wallet_switchEthereumChain({wallet:r,params:t.params});else{const{handleSwitchChain:e}=await n(()=>import("./switch-chain-DGGvJU-p.js"),__vite__mapDeps([6,1,2]));s=await e({wallet:r,params:t.params})}break}default:{const e=a==null?void 0:a[t.method];if(e)s=await e({account:i,chainId:m(c),params:t.params});else throw new Error(`Unsupported request method: ${t.method}`)}}}catch(e){s={code:typeof e=="object"&&e!==null&&"code"in e?e.code:500,message:typeof e=="object"&&e!==null&&"message"in e?e.message:"Unknown error"}}p.respond({topic:h,response:{id:l,jsonrpc:"2.0",result:s}})}const f=Object.freeze(Object.defineProperty({__proto__:null,fulfillRequest:u},Symbol.toStringTag,{value:"Module"}));export{f as s,T as v};
